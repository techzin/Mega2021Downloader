<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>